% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PDMIFQUANTILE.R
\name{PDMIFQUANTILE}
\alias{PDMIFQUANTILE}
\title{PDMIFQUANTILE}
\usage{
PDMIFQUANTILE(X, Y, TAU, Nfactors, Maxit = 100, tol = 0.001)
}
\arguments{
\item{X}{The (NT) times p design matrix, without an intercept where N=number of individuals, T=length of time series, p=number of explanatory variables.}

\item{Y}{The T times N panel of response where N=number of individuals, T=length of time series.}

\item{TAU}{A pre-specified quantile point.}

\item{Nfactors}{A pre-specified number of common factors.}

\item{Maxit}{A maximum number of iterations in optimization. Default is 100.}

\item{tol}{Tolerance level of convergence. Default is 0.001.}
}
\value{
A list with the following components:
\itemize{
\item Coefficients: The estimated heterogeneous coefficients.
\item Lower05: Lower end (5\%) of the 90\% confidence interval of the regression coefficients.
\item Upper95: Upper end (95\%) of the 90\% confidence interval of the regression coefficients.
\item Factors: The estimated common factors across groups.
\item Loadings: The estimated quantile point under a given tau.
\item Predict: The conditional expectation of response variable.
\item pval: p-value for testing hypothesis on heterogeneous coefficients.
\item Se: Standard error of the estimated regression coefficients.
}
}
\description{
This function estimates heterogeneous quantile panel data models with interactive effects.
}
\examples{
N <- 300
P <- 300
R <- 5
p <- 8
TAU <- 0.95

U <- matrix(runif(N*P,0,1),nrow=N,ncol=P)
LAM <- matrix(runif(P*R,-1,1),nrow=P,ncol=R)
FAC <- matrix(runif(N*R,0,2),nrow=N,ncol=R)
FL <- matrix(0,nrow=N,ncol=P)

for(i in 1:N){
  for(j in 1:P){
    B <- LAM[j,]+0.1*U[i,j]
    if(U[i,j]<=0.2){FL[i,j] <- FAC[i,1:3]\%*\%B[1:3]}
    if(0.2<=U[i,j] && U[i,j]<=0.8){FL[i,j] <- FAC[i,1:4]\%*\%B[1:4]}
    if(0.8<=U[i,j]){FL[i,j] <- FAC[i,1:5]\%*\%B[1:5]}
  }
}

AX <- matrix(runif(p*P*N,0,2),nrow=P*N)
for(j in 1:P){
  AX[(N*(j-1)+1):(N*j),1] <- AX[(N*(j-1)+1):(N*j),1]+0.01*FL[,j]
  AX[(N*(j-1)+1):(N*j),3] <- AX[(N*(j-1)+1):(N*j),3]-0.01*FL[,j]
  AX[(N*(j-1)+1):(N*j),5] <- AX[(N*(j-1)+1):(N*j),5]+0.02*FL[,j]
  AX[(N*(j-1)+1):(N*j),6] <- AX[(N*(j-1)+1):(N*j),6]-0.02*FL[,j]
}

XB <- matrix(0,nrow=N,ncol=P)
for(i in 1:N){
  for(j in 1:P){
    X <- AX[(N*(j-1)+1):(N*j),]
    B <- c(-1,1,1,-1,rep(1,len=p-4))+0.1*j/N+0.1*U[i,j]
    if(U[i,j]<=0.2){XB[i,j] <- X[i,1:p]\%*\%B[1:p]}
    if(0.2<=U[i,j] && U[i,j]<=0.8){XB[i,j] <- X[i,1:p]\%*\%B[1:p]}
    if(0.8<=U[i,j]){XB[i,j] <- X[i,1:p]\%*\%B[1:p]}
  }
}

AY <- XB+FL+qnorm(U,0,1)
fit <- PDMIFQUANTILE(AX,AY,TAU,R)
}
\references{
Ando, T. and Bai, J. (2020) Quantile co-movement in financial markets Journal of the American Statistical Association.
}
